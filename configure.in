AC_INIT(configure.in)

AC_CONFIG_MACRO_DIR([m4])
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(necpp, 1.5.1)

LT_INIT

dnl ************************************************
dnl *** Add an automatic build date
dnl ************************************************
AC_PATH_PROG(DATE,date)
if test -z "$ac_cv_path_DATE" ; then
    AC_MSG_ERROR(** \"date\" not found. Can't determine build-date.)
    AC_SUBST(BUILD_DATE, unknown)
    AC_DEFINE(BUILD_DATE, "unknown", [The build date])
else
    AC_SUBST(BUILD_DATE, `date +"%d-%m-%y"`)
    AC_MSG_NOTICE(Build date: $BUILD_DATE)
    AC_DEFINE_UNQUOTED(BUILD_DATE, "$BUILD_DATE", [The build date])
fi

dnl ************************************************
dnl *** Check for Lapack library
dnl ************************************************


AC_ARG_WITH([lapack],
	[AS_HELP_STRING([--without-lapack],
	[disable support for lapack])],
	[],
	[with_lapack=yes])

LIBLAPACK=
	AS_IF([test "x$with_lapack" != xno],
	[
		LDFLAGS="$LDFLAGS -L/usr/lib/atlas-base/atlas"
		AC_CHECK_LIB(
		[lapack], [clapack_zgetrf], 
		[AC_SUBST([LIBLAPACK], ["-L/usr/lib/atlas-base/atlas -llapack -lblas -lpthread"]) AC_DEFINE([LAPACK], [1], [Define if you have liblapack])],
		[AC_MSG_FAILURE([lapack library test failed (--without-lapack to disable)])],
		[])
	])

AC_CHECK_LIB([m],[pow])

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AM_PROG_LIBTOOL
AC_OUTPUT(Makefile src/Makefile)

